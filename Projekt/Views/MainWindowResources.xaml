<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Projekt.ViewModels"
                    xmlns:vw="clr-namespace:Projekt.Views"
                    xmlns:AddViewModels="clr-namespace:Projekt.ViewModels.AddViewModels"
                    xmlns:ShowViewModels="clr-namespace:Projekt.ViewModels.ShowWithoutFkKeyViewModels"
                    xmlns:ShowViewModelsWithFk="clr-namespace:Projekt.ViewModels.ShowWithFkKeyViewModels"
                    xmlns:AddWithFkKeyView="clr-namespace:Projekt.Views.AddWithFkKeyView"
                    xmlns:AddWithFkKeyViewModels="clr-namespace:Projekt.ViewModels.AddWithFkKeyViewModels"
                    xmlns:ChoiceWindowsView="clr-namespace:Projekt.Views.ChoiceWindowsView"
                    xmlns:ChoiceWindowsViewModels="clr-namespace:Projekt.ViewModels.ChoiceWindowsViewModel"
                    xmlns:BusinessLogicViewModels="clr-namespace:Projekt.ViewModels.BuisnessLogicViewModels"
               
                    
                    xmlns:AddView="clr-namespace:Projekt.Views.AddViews"
                    xmlns:ShowView="clr-namespace:Projekt.Views.ShowWithoutFkKeyView"
                    xmlns:ShowViewWithFk="clr-namespace:Projekt.Views.ShowWithFkKeyView"
                    xmlns:BusinessLogicView="clr-namespace:Projekt.Views.BuisnessLogicView"
                    
                    
                    >

    <!--tu bedziemy laczyc View z ViewModel zakładek-->

    <DataTemplate DataType="{x:Type BusinessLogicViewModels:RaportDwaComboboxViewModel}">
        <BusinessLogicView:RaportDwaComboboxView/>
    </DataTemplate>


    <DataTemplate DataType="{x:Type BusinessLogicViewModels:RaportSprzedazyCzteryViewModel}">
        <BusinessLogicView:RaportSprzedazyCzteryView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type BusinessLogicViewModels:RaportSprzedazDostawcyViewModel}">
        <BusinessLogicView:RaportSprzedazDostawcyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type BusinessLogicViewModels:RaportSprzedazyViewModel}">
        <BusinessLogicView:RaportSprzedazyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type BusinessLogicViewModels:FirstBuisnessLogicViewModel}">
        <BusinessLogicView:FirstBuisnessLogicView/>
    </DataTemplate>


    <DataTemplate DataType="{x:Type AddWithFkKeyViewModels:AddKontrahentViewModel}">
        <AddWithFkKeyView:AddKontrahentView/>
    </DataTemplate>


    <DataTemplate DataType="{x:Type ChoiceWindowsViewModels:ChooseTowarViewModel}">
        <ChoiceWindowsView:ChooseTowarView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ChoiceWindowsViewModels:ChooseKontrahentViewModel}">
        <ChoiceWindowsView:ChooseKontrahentView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddWithFkKeyViewModels:AddDokumentViewModel}">
        <AddWithFkKeyView:AddDokumentView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type AddWithFkKeyViewModels:AddTowarViewModel}">
        <AddWithFkKeyView:AddTowarView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModelsWithFk:WszystkieEwidencjeViewModel}">
        <ShowViewWithFk:WszystkieEwidencjeView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModelsWithFk:WszystkieDokumentyViewModel}">
        <ShowViewWithFk:WszystkieDokumentyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModelsWithFk:WszyscyKontrahenciViewModel}">
        <ShowViewWithFk:WszyscyKontrahenciView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModelsWithFk:WszystkieTowaryViewModel}">
        <ShowViewWithFk:WszystkieTowaryView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlWojewodztwoViewModel}">
        <ShowView:ShowSlWojewodztwoView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlKategoriaDokumentuViewModel}">
        <ShowView:ShowSlKategoriaDokumentuView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlGrupaKhViewModel}">
        <ShowView:ShowSlGrupaKhView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlGrupaTwViewModel}">
        <ShowView:ShowSlGrupaTwView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlCechaTwViewModel}">
        <ShowView:ShowSlCechaTwView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlPolaWlasnieViewModel}">
        <ShowView:ShowSlPolaWlasneView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlPanstwoViewModel}">
        <ShowView:ShowSlPanstwoView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ShowViewModels:ShowSlMagazynViewModel}">
        <ShowView:ShowSlMagazynView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlWojewodztwoViewModel}">
        <AddView:AddSlWojewodztwoView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlPolaWlasneViewModel}">
        <AddView:AddSlPoleWlasneView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type AddViewModels:AddSlPanstwoViewModel}">
        <AddView:AddSlPanstwaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlMagazynViewModel}">
        <AddView:AddSlMagazynView/>
    </DataTemplate>

    
    <DataTemplate DataType="{x:Type AddViewModels:AddSlKategoriaDokumentuViewModel}">
        <AddView:AddSlKategoriaDokumentowView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlGrupaTwViewModel}">
        <AddView:AddSlGrupaTwView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlGrupaKhViewModel}">
        <AddView:AddSlGrupaKhView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type AddViewModels:AddSlCechaTwViewModel}">
        <AddView:AddSlCechaTwView/>
    </DataTemplate>

    <DataTemplate x:Key="FirstCell">
        <StackPanel Orientation="Horizontal">
            <CheckBox IsChecked="{Binding Path=IsSelected, 
      RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
        </StackPanel>
    </DataTemplate>

    <!--tu jest koniec laczenia View z ViewModel zakładek-->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                   
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="6" Padding="5" Background="LightBlue" BorderThickness="0"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>



</ResourceDictionary>